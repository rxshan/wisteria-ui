@import '../tokens/index';

@mixin element-size($variant, $value) {
  @if & {
    &-#{$variant} {
      height: $value;
    }
  }
}

@mixin element-shape($variant, $value) {
  @if & {
    &-#{$variant} {
      border-radius: $value;
    }
  }
}

/**
 * 通过 $color-alpha 设置元素初始状态颜色
**/
@mixin element-state-layer($color, $color-alpha: 0) {
  &::after {
    position: absolute;
    inset: 0;
    z-index: -1;
    content: '';
    background: $color;
    border-radius: inherit;
    opacity: $color-alpha;
    transition: inherit;
  }

  &:hover::after {
    opacity: if(
      $color-alpha > calc(3 * $state-layer-hovered-alpha),
      calc($color-alpha - $state-layer-hovered-alpha),
      calc($state-layer-hovered-alpha + $color-alpha)
    );
  }

  &:active::after {
    opacity: if(
      $color-alpha > calc(3 * $state-layer-pressed-alpha),
      calc($color-alpha - $state-layer-pressed-alpha),
      calc($state-layer-pressed-alpha + $color-alpha)
    );
  }
}
